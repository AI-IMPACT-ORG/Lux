$(
  MDE Pyramid with Resolved Metas - Metamath Implementation
  All moduli parameters are explicitly instantiated
  This provides a complete, compilable Metamath library
  
  Generated by metamath-generator.rkt
  $)

$( RG Operators with Resolved Metas $)
$( All RG functions use concrete moduli values $)

$c rg-flow rg-beta-function rg-anomaly-measure rg-entropy-measure $.
$c rg-fixed-point rg-flow-inverse rg-consistency-check $.
$c rg-anomaly-cancellation rg-entropy-bounds rg-fixed-point-convergence $.
$c not true false function value $.

$v f x y $.
function-is-function $f function f $.
value-is-value $f value x $.
value-is-value2 $f value y $.

$( RG Flow with concrete moduli $)
rg-flow-def $a function rg-flow $.
rg-flow-preserves $p function rg-flow $=
  ( function-is-function value-is-value ) AB $.

$( RG Beta function with concrete moduli $)
rg-beta-function-def $a function rg-beta-function $.
rg-beta-function-preserves $p function rg-beta-function $=
  ( value-is-value ) A $.

$( RG Anomaly measure with concrete moduli $)
rg-anomaly-measure-def $a function rg-anomaly-measure $.
rg-anomaly-measure-preserves $p function rg-anomaly-measure $=
  ( value-is-value ) A $.

$( RG Entropy measure with concrete moduli $)
rg-entropy-measure-def $a function rg-entropy-measure $.
rg-entropy-measure-preserves $p function rg-entropy-measure $=
  ( value-is-value ) A $.

$( RG Fixed point with concrete moduli $)
rg-fixed-point-def $a function rg-fixed-point $.
rg-fixed-point-preserves $p function rg-fixed-point $=
  ( function-is-function value-is-value ) AB $.

$( RG Flow inverse with concrete moduli $)
rg-flow-inverse-def $a function rg-flow-inverse $.
rg-flow-inverse-preserves $p function rg-flow-inverse $=
  ( function-is-function value-is-value ) AB $.

$( RG Consistency check with concrete moduli $)
rg-consistency-check-def $a function rg-consistency-check $.
rg-consistency-check-preserves $p function rg-consistency-check $=
  ( value-is-value ) A $.

$( RG Anomaly cancellation with concrete moduli $)
rg-anomaly-cancellation-def $a function rg-anomaly-cancellation $.
rg-anomaly-cancellation-preserves $p function rg-anomaly-cancellation $=
  ( value-is-value ) A $.

$( RG Entropy bounds with concrete moduli $)
rg-entropy-bounds-def $a function rg-entropy-bounds $.
rg-entropy-bounds-preserves $p function rg-entropy-bounds $=
  ( value-is-value ) A $.

$( RG Fixed point convergence with concrete moduli $)
rg-fixed-point-convergence-def $a function rg-fixed-point-convergence $.
rg-fixed-point-convergence-preserves $p function rg-fixed-point-convergence $=
  ( value-is-value ) A $.

$( Not function $)
not-def $a function not $.
not-preserves $p function not $=
  ( value-is-value ) A $.

$( Proofs with concrete moduli $)
rg-flow-preserves-proof $p function rg-flow $=
  ( function-is-function value-is-value ) AB $.

rg-anomaly-involutive-proof $p function rg-anomaly-measure $=
  ( value-is-value ) A $.

